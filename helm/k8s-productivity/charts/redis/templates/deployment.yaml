apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app: redis
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: redis
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
      containers:
      - name: redis
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: ["--requirepass", "$(REDIS_PASSWORD)"]
        ports:
        - containerPort: 6379
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-redis-secret
              key: REDIS_PASSWORD
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-redis-data
      {{- end }}